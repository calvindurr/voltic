# Generated by Django 4.2.7 on 2025-09-22 15:05

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the portfolio', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Description of the portfolio')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the renewable energy site', max_length=200)),
                ('site_type', models.CharField(choices=[('solar', 'Solar'), ('wind', 'Wind')], help_text='Type of renewable energy site', max_length=50)),
                ('latitude', models.DecimalField(decimal_places=6, help_text='Latitude coordinate (-90 to 90)', max_digits=9, validators=[django.core.validators.MinValueValidator(Decimal('-90.0')), django.core.validators.MaxValueValidator(Decimal('90.0'))])),
                ('longitude', models.DecimalField(decimal_places=6, help_text='Longitude coordinate (-180 to 180)', max_digits=9, validators=[django.core.validators.MinValueValidator(Decimal('-180.0')), django.core.validators.MaxValueValidator(Decimal('180.0'))])),
                ('capacity_mw', models.DecimalField(blank=True, decimal_places=2, help_text='Capacity in megawatts', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('latitude', 'longitude')},
            },
        ),
        migrations.CreateModel(
            name='PortfolioSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forecasting.portfolio')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forecasting.site')),
            ],
            options={
                'ordering': ['added_at'],
                'unique_together': {('portfolio', 'site')},
            },
        ),
        migrations.AddField(
            model_name='portfolio',
            name='sites',
            field=models.ManyToManyField(blank=True, through='forecasting.PortfolioSite', to='forecasting.site'),
        ),
        migrations.CreateModel(
            name='ForecastJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', help_text='Current status of the forecast job', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if job failed')),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forecasting.portfolio')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ForecastResult',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('forecast_datetime', models.DateTimeField(help_text='The datetime this forecast is for')),
                ('predicted_generation_mwh', models.DecimalField(decimal_places=3, help_text='Predicted energy generation in MWh', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
                ('confidence_interval_lower', models.DecimalField(blank=True, decimal_places=3, help_text='Lower bound of confidence interval', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
                ('confidence_interval_upper', models.DecimalField(blank=True, decimal_places=3, help_text='Upper bound of confidence interval', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.0'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='forecasting.forecastjob')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forecasting.site')),
            ],
            options={
                'ordering': ['forecast_datetime'],
                'unique_together': {('job', 'site', 'forecast_datetime')},
            },
        ),
    ]
